---
if (Astro.request.method !== "POST") {
  return new Response(null, {
    status: 405,
    statusText: "Method Not Allowed",
  });
}
const data = await Astro.request.formData();

if (!data.has("username")) {
  return new Response(null, {
    status: 400,
    statusText: "Bad Request",
  });
}

const fetchUUID = await fetch(
  "https://api.mojang.com/users/profiles/minecraft/" +
    data.get("username")?.valueOf(),
  {
    method: "GET",
  },
).catch(() => {
  return new Response(null, {
    status: 404,
    statusText: "Not Found",
  });
});

if (fetchUUID.status !== 200) {
  return new Response(null, {
    status: fetchUUID.status,
    statusText: fetchUUID.statusText,
  });
}

const uuid: string = (await fetchUUID.json())["id"];

const fetchSkin = await fetch(
  "https://sessionserver.mojang.com/session/minecraft/profile/" + uuid,
  {
    method: "GET",
  },
).catch(() => {
  return new Response(null, {
    status: 500,
    statusText: "Server error",
  });
});

if (fetchSkin.status !== 200) {
  return new Response(null, {
    status: fetchSkin.status,
    statusText: fetchSkin.statusText,
  });
}

const uuidList = [
  Buffer.from(uuid.slice(0, 8), "hex").readInt32BE(),
  Buffer.from(uuid.slice(8, 16), "hex").readInt32BE(),
  Buffer.from(uuid.slice(16, 24), "hex").readInt32BE(),
  Buffer.from(uuid.slice(24, 32), "hex").readInt32BE(),
];

const texturesBase64 = (await fetchSkin.json())["properties"][0]["value"];

const textures = JSON.parse(atob(texturesBase64));
const skinURL: string = textures["textures"]["SKIN"]["url"];
const value = '{"textures":{"SKIN":{"url":"' + skinURL + '"}}}';
const valueBase64 = btoa(value);

const giveCommand = `give @p player_head{SkullOwner:{Id:[I;${uuidList.join(",")}],Properties:{textures:[{Value:"${valueBase64}"}]}}}`;
---

<label>Skin URL:</label>
<code class="output" id="url"
  ><a href={skinURL} target="_blank">{skinURL}</a></code
>
<label>Value:</label>
<code class="output" id="value">{valueBase64}</code>
<label>/give command:</label>
<code class="output" id="give">{giveCommand}</code>
<button
  onclick="navigator.clipboard.writeText(document.querySelector('#give').innerHTML)"
>
  copy
</button>
<label id="preview">Preview:</label>
<div id="canvas_container">
  <canvas id="skin_container" data-skin={skinURL}></canvas>
</div>

<script>
  import { SkinViewer } from "skinview3d";

  const canvas = document.getElementById("skin_container") as
    | HTMLCanvasElement
    | undefined;
  if (canvas) {
    const skinURL = canvas.dataset.skin ?? "";
    const skinviewer = new SkinViewer({
      canvas,
      width: 300,
      height: 400,
      skin: skinURL,
    });

    skinviewer.controls.enableZoom = false;
    skinviewer.playerObject.cape.visible = false;
    skinviewer.playerObject.skin.body.visible = false;
    skinviewer.playerObject.skin.head.visible = true;
    skinviewer.playerObject.skin.leftArm.visible = false;
    skinviewer.playerObject.skin.leftLeg.visible = false;
    skinviewer.playerObject.skin.rightArm.visible = false;
    skinviewer.playerObject.skin.rightLeg.visible = false;
  }
</script>

<style is:global>
  .output {
    width: 100%;
    resize: none;
    height: fit-content;
    display: block;
    margin: 0.5rem 0;
    padding: 0.2rem;
    border: 1px solid #ccc;
    border-radius: 0.25rem;
    word-break: break-all;
  }

  #url {
    word-break: break-word;
    border: none;
  }

  #preview {
    padding-top: 1rem;
    display: block;
  }

  #canvas_container {
    margin: 1rem 0;
    border: 1px solid #ccc;
    border-radius: 0.25rem;
    height: 20rem;
    display: flex;
    justify-content: center;
  }
</style>
